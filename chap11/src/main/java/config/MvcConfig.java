package config;import interceptor.AuthCheckInterceptor;import org.springframework.context.MessageSource;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.context.support.ResourceBundleMessageSource;import org.springframework.validation.Validator;import org.springframework.web.servlet.config.annotation.*;import validate.RegisterRequestValidator;@Configuration@EnableWebMvcpublic class MvcConfig implements WebMvcConfigurer {    @Override    public void addInterceptors(InterceptorRegistry registry) {        registry.addInterceptor(authCheckInterceptor())                .addPathPatterns("/edit/**")                .excludePathPatterns("/edit/help/**");    }    @Override    public void configureDefaultServletHandling(DefaultServletHandlerConfigurer configurer) {        configurer.enable();    }    @Override    public void configureViewResolvers(ViewResolverRegistry registry) {        registry.jsp("/WEB-INF/view/", ".jsp");    }    @Override    public void addViewControllers(ViewControllerRegistry registry) {        registry.addViewController("/main").setViewName("main");    }    @Bean    public AuthCheckInterceptor authCheckInterceptor() {        return new AuthCheckInterceptor();    }    @Bean    public MessageSource messageSource() {        ResourceBundleMessageSource resourceBundleMessageSource = new ResourceBundleMessageSource();        resourceBundleMessageSource.setBasenames("message.labels");        resourceBundleMessageSource.setDefaultEncoding("UTF-8");        return resourceBundleMessageSource;    }//    글로벌 범위 Validator를 설정하면//    OptionalValidatorFactoryBean을 사용하지 않는다.//    @Override//    public Validator getValidator() {//        return new RegisterRequestValidator();//    }}