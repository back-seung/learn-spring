package controller;import dto.ErrorResponse;import exception.MemberNotFoundException;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.MethodArgumentNotValidException;import org.springframework.web.bind.annotation.ExceptionHandler;import org.springframework.web.bind.annotation.RestControllerAdvice;import java.util.stream.Collectors;// ControllerAdvice와 동일 결과를 XML / JSON 형식으로 바꿔주는게 차이인듯// @ExceptionHandler를 전역으로 설정할 수 있게함@RestControllerAdvice("controller")public class ApiExceptionAdvice {    @ExceptionHandler(MethodArgumentNotValidException.class)    public ResponseEntity<ErrorResponse> handleBindException(MethodArgumentNotValidException exception) {        String errorCodes = exception.getAllErrors()                .stream()                .map(error -> error.getCodes()[0])                .collect(Collectors.joining());        return ResponseEntity                .status(HttpStatus.BAD_REQUEST)                .body(new ErrorResponse(errorCodes));    }    @ExceptionHandler(MemberNotFoundException.class)    public ResponseEntity<ErrorResponse> handleNoData() {        return ResponseEntity.status(HttpStatus.NOT_FOUND)                .body(new dto.ErrorResponse("No Member"));    }}